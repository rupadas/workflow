apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: cyber-
spec:
  entrypoint: cyber-trivy-example
  templates:
  - name: cyber-trivy-example
    steps:
    - - name: generate
        template: gen-repo-list
    - - name: trivy-check
        template: trivy-single
        arguments:
          parameters:
          - name: repo
            value: "{{item}}"
        withParam: "{{steps.generate.outputs.result}}"
    - - name: trivy-output
        template: trivy-output
        arguments:
          parameters:
          - name: results
            value: "{{steps.trivy-check.outputs.parameters}}"
        
  - name: gen-repo-list
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import json
        import sys
        repo_list = str("https://github.com/knqyf263/trivy-ci-test,https://github.com/rupadas/kodo").split(",")
        json.dump(repo_list, sys.stdout)
  
  - name: trivy-single
    inputs:
      parameters:
      - name: repo
    container:
      image: aquasec/trivy:latest
      command: [trivy, repo, --scanners, "vuln,config","-f", "table","-o","result.txt"]
      args: ["{{inputs.parameters.repo}}"]
    outputs:
      parameters:
        - name: repo
          valueFrom:
            path: /result.txt

  - name: trivy-output
    inputs:
      parameters:
        - name: results
    script:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo {{inputs.parameters.results}}"]